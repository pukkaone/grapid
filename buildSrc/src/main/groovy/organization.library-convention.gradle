plugins {
  id 'checkstyle'
  id 'java-library'
  id 'maven'
  id 'signing'
}

group = 'com.github.pukkaone'

repositories {
  mavenLocal()
  jcenter()
}

ext {
  lombokVersion = '1.18.12'
  springBootVersion = '2.3.4.RELEASE'
  springFrameworkVersion = '5.2.9.RELEASE'

  isUploadArchivesEnabled =
      project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')
}

dependencies {
  testImplementation 'org.assertj:assertj-core:3.13.2'
  testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
}

sourceCompatibility = JavaVersion.VERSION_11

checkstyle {
  toolVersion = '8.29'
}

test {
  useJUnitPlatform()
}

jar {
  manifest {
    attributes(
        'Automatic-Module-Name': "${project.group}.${project.name}".replace('-', '.'),
        'Implementation-Version': project.version)
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

signing {
  required { isUploadArchivesEnabled }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
        if (isUploadArchivesEnabled) {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
      }

      pom.project {
        name project.name
        url 'https://github.com/pukkaone/grapid'

        licenses {
          license {
            name 'Apache License, Version 2.0'
            url 'https://www.apache.org/licenses/LICENSE-2.0'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'pukkaone'
            name 'Chin Huang'
          }
        }

        scm {
          connection 'scm:git:git@github.com:pukkaone/grapid.git'
          developerConnection 'scm:git:git@github.com:pukkaone/grapid.git'
          url 'https://github.com/pukkaone/grapid'
        }
      }
    }
  }
}

afterEvaluate { project ->
  uploadArchives.repositories.mavenDeployer.pom.project {
    description project.description
  }
}
