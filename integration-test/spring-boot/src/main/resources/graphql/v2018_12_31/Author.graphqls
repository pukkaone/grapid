type Author {
  id: ID!
  name: String!
  book(id: ID!): Book
  books: [Book]!
      @argument(name: "authorId", value: "((com.example.graphql.v2019_01_01.type.Author) environment.getSource()).getId()")
}

input AuthorInput {
  name: String
}

extend type Mutation @resolve(class: "AuthorResolver") {
  createAuthor(authorInput: AuthorInput!): Author!
  createAuthors(authorInputs: [AuthorInput]!): [Author]!
}

extend type Query @resolve(class: "AuthorResolver") {
  echoNullableAuthor(authorInput: AuthorInput): Author
  echoNullableListAuthor(authorInputs: [AuthorInput]): [Author]!
}
